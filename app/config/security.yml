jms_security_extra:
    secure_all_services: false
    expressions: true

security:
    encoders:
#        Symfony\Component\Security\Core\User\User: plaintext
        FOS\UserBundle\Model\UserInterface: sha512

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        fos_userbundle:
            id: fos_user.user_provider.username
            # id: fos_user.user_manager
#        in_memory:
#            memory:
#                users:
#                    user:  { password: userpass, roles: [ 'ROLE_USER' ] }
#                    admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }

    firewalls:
        main:
            pattern: ^/
            form_login:
                provider: fos_userbundle
                csrf_provider: form.csrf_provider
                default_target_path: index
                login_path: fos_user_security_login
                check_path: fos_user_security_check
#            logout:       true
            logout:
                path: fos_user_security_logout
                target: index
            anonymous:    true
            oauth:
                resource_owners:
                    google: "/loginOA/check-google"
                    facebook: "/loginOA/check-facebook"
                    foursquare: "/loginOA/check-foursquare"
                    twitter: "/loginOA/check-twitter"
                login_path: /oauth/login
                failure_path: /oauth/login
                oauth_user_provider:
                    service: hwi_oauth.user.provider.fosub_bridge
#        dev:
#            pattern:  ^/(_(profiler|wdt)|css|images|js)/
#            security: false
#
#        login:
#            pattern:  ^/demo/secured/login$
#            security: false
#
#        secured_area:
#            pattern:    ^/
#            form_login:
#                check_path: /login_check
#                login_path: /login
#            logout:
#                path:   /logout
#                target: /demo/
#            anonymous: ~
#            #http_basic:
#            #    realm: "Secured Demo Area"

    access_control:
        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        #- { path: ^/_internal/secure, roles: IS_AUTHENTICATED_ANONYMOUSLY, ip: 127.0.0.1 }
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/, role: ROLE_ADMIN }

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: ROLE_ADMIN